/* Para executar pela linha de comando:
* 1- Use o comando cd seguido pelo nome da pasta de destino para sair do diretório atual.
* 2- Após chegar ao diretório correto, você poderá compilar o arquivo digitando javac arquivo.java na linha de comando e pressionando ↵ Enter.(lembrando que você deve trocar "arquivo" pelo nome do arquivo do seu programa)
* 3-Após isso basta ver se foi criado a class com o nome do seu arquivo (use o comando dir)
* 4- Para executar basta colocar o código :
* java (nome da classe sem o .class) "(caminho absoluto do seu arquivo csv)"
* ex: java teste "C:\\Users\\cars.csv" */

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;
import javax.swing.JOptionPane;

public class teste {

	public static void main(String[] args) {
		
		System.out.print(args[0]);

		teste obj = new teste();
		obj.run(args[0]);

	}

	public void run(String args) {

		// Declarando variaveis

		String arquivoCSV = null;
		String invertida = "";
		String caminho = "";
		String nome = "";
		String desenvertida = "";
		String caminhodesenvertido = "";
		BufferedReader br = null;
		BufferedReader br2 = null;
		String linha = "";
		String linha2 = "";
		String csvDivisor = ",";
		String Textojson = "";
		int index1 = 0;
		int l = 0;
		int linhaM = 0;
		int cont = 0;
		int coluna = 0;
		String[] car = null;
		String[] car2 = null;

		// Lendo caminho absoluto informado

		try {
			arquivoCSV = args;
					//JOptionPane.showInputDialog("Informe o caminho absoluto do arquivo");

			// Pegando caminho para salvar arquivo Json e o nome do arquivo

			invertida = new StringBuilder(arquivoCSV).reverse().toString();
			index1 = invertida.indexOf(".");
			caminho = invertida.substring(invertida.indexOf("."), invertida.length());
			nome = invertida.substring(index1 + 1, invertida.indexOf("\\"));
			desenvertida = new StringBuilder(nome).reverse().toString();
			caminhodesenvertido = new StringBuilder(caminho).reverse().toString();
			br = new BufferedReader(new FileReader(arquivoCSV));
			br2 = new BufferedReader(new FileReader(arquivoCSV));

			/*
			 * Passando valor do arquivo para a variavel e pegando o numero de linhas e
			 * colunas para criar uma matriz e guardar os valores*/
			 

			while ((linha = br.readLine()) != null) {
				linhaM++;
				car = linha.split(csvDivisor);
				coluna = car.length;

			}

			// Criando a matriz

			String m[][] = new String[linhaM][coluna];

			// Colocando valores na matriz e montando arquivo Json

			while ((linha2 = br2.readLine()) != null) {

				car2 = linha2.split(csvDivisor);
				Textojson += ("{");
				for (int j = 0; j < coluna; j++) {
					m[l][j] = car2[j];
					if (l > 0) {
						Textojson += ('"' + m[0][j] + '"' + " : " + '"' + m[l][j] + '"');
						if (j < (coluna - 1)) {
							Textojson += (",");
						}
					}

					else if (cont == 0) {
						Textojson += ("\n" + '"' + desenvertida + '"' + ": [\n");
						cont++;
					}

				}

				l++;
				if (l > 1 && l < linhaM) {
					Textojson += ("},\n");
				}

				if (l == linhaM) {
					Textojson += ("}");
					Textojson += ("\n]}");
				}

			}

			geraArquivo(Textojson, caminhodesenvertido);

		} catch (StringIndexOutOfBoundsException e) {

			JOptionPane.showMessageDialog(null,
					"Entrada inválida, verifique o nome do arquivo ou ou o caminho absoluto digitado");
			System.out.println("Entrada inválida, verifique o nome do arquivo ou o caminho absoluto digitado");
		} catch (FileNotFoundException e) {
			// e.printStackTrace();
			JOptionPane.showMessageDialog(null,
					"Arquivo inválido, verifique o nome do arquivo ou ou o caminho absoluto digitado");
			System.out.println("Arquivo inválido, verifique o nome do arquivo ou o caminho absoluto digitado");

		} catch (IOException e) {
			// e.printStackTrace();
			JOptionPane.showMessageDialog(null, "Arquivo inválido");
			System.out.println("Arquivo inválido");

		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, "Arquivo inválido");
			System.out.println("Arquivo inválido");
		} finally {
			if (br != null) {
				try {
					br.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}
	}

	private void geraArquivo(String conteudo, String caminho) {
		// salvando o arquivo json com o mesmo nome e no mesmo lugar do arquivo csv
		// indicado
		try {
			FileWriter writer = new FileWriter(new File(caminho + "json"));
			PrintWriter saida = new PrintWriter(writer);
			saida.print(conteudo);
			saida.close();
			writer.close();
			System.out.println("Arquivo criado com sucesso!");
			JOptionPane.showMessageDialog(null, "Arquivo criado com sucesso!");

		} catch (Exception e) {
			e.printStackTrace();
		}

	}
}
